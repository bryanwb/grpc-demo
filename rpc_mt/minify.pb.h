// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minify.proto

#ifndef PROTOBUF_minify_2eproto__INCLUDED
#define PROTOBUF_minify_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_minify_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMinifyRequestImpl();
void InitDefaultsMinifyRequest();
void InitDefaultsMinifyReplyImpl();
void InitDefaultsMinifyReply();
inline void InitDefaults() {
  InitDefaultsMinifyRequest();
  InitDefaultsMinifyReply();
}
}  // namespace protobuf_minify_2eproto
namespace minify {
class MinifyReply;
class MinifyReplyDefaultTypeInternal;
extern MinifyReplyDefaultTypeInternal _MinifyReply_default_instance_;
class MinifyRequest;
class MinifyRequestDefaultTypeInternal;
extern MinifyRequestDefaultTypeInternal _MinifyRequest_default_instance_;
}  // namespace minify
namespace minify {

// ===================================================================

class MinifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:minify.MinifyRequest) */ {
 public:
  MinifyRequest();
  virtual ~MinifyRequest();

  MinifyRequest(const MinifyRequest& from);

  inline MinifyRequest& operator=(const MinifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MinifyRequest(MinifyRequest&& from) noexcept
    : MinifyRequest() {
    *this = ::std::move(from);
  }

  inline MinifyRequest& operator=(MinifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MinifyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MinifyRequest* internal_default_instance() {
    return reinterpret_cast<const MinifyRequest*>(
               &_MinifyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MinifyRequest* other);
  friend void swap(MinifyRequest& a, MinifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MinifyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MinifyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MinifyRequest& from);
  void MergeFrom(const MinifyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MinifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_in = 1;
  void clear_data_in();
  static const int kDataInFieldNumber = 1;
  const ::std::string& data_in() const;
  void set_data_in(const ::std::string& value);
  #if LANG_CXX11
  void set_data_in(::std::string&& value);
  #endif
  void set_data_in(const char* value);
  void set_data_in(const void* value, size_t size);
  ::std::string* mutable_data_in();
  ::std::string* release_data_in();
  void set_allocated_data_in(::std::string* data_in);

  // int32 data_in_len = 2;
  void clear_data_in_len();
  static const int kDataInLenFieldNumber = 2;
  ::google::protobuf::int32 data_in_len() const;
  void set_data_in_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:minify.MinifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_in_;
  ::google::protobuf::int32 data_in_len_;
  mutable int _cached_size_;
  friend struct ::protobuf_minify_2eproto::TableStruct;
  friend void ::protobuf_minify_2eproto::InitDefaultsMinifyRequestImpl();
};
// -------------------------------------------------------------------

class MinifyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:minify.MinifyReply) */ {
 public:
  MinifyReply();
  virtual ~MinifyReply();

  MinifyReply(const MinifyReply& from);

  inline MinifyReply& operator=(const MinifyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MinifyReply(MinifyReply&& from) noexcept
    : MinifyReply() {
    *this = ::std::move(from);
  }

  inline MinifyReply& operator=(MinifyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MinifyReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MinifyReply* internal_default_instance() {
    return reinterpret_cast<const MinifyReply*>(
               &_MinifyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MinifyReply* other);
  friend void swap(MinifyReply& a, MinifyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MinifyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  MinifyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MinifyReply& from);
  void MergeFrom(const MinifyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MinifyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_out = 1;
  void clear_data_out();
  static const int kDataOutFieldNumber = 1;
  const ::std::string& data_out() const;
  void set_data_out(const ::std::string& value);
  #if LANG_CXX11
  void set_data_out(::std::string&& value);
  #endif
  void set_data_out(const char* value);
  void set_data_out(const void* value, size_t size);
  ::std::string* mutable_data_out();
  ::std::string* release_data_out();
  void set_allocated_data_out(::std::string* data_out);

  // int32 data_out_len = 2;
  void clear_data_out_len();
  static const int kDataOutLenFieldNumber = 2;
  ::google::protobuf::int32 data_out_len() const;
  void set_data_out_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:minify.MinifyReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_out_;
  ::google::protobuf::int32 data_out_len_;
  mutable int _cached_size_;
  friend struct ::protobuf_minify_2eproto::TableStruct;
  friend void ::protobuf_minify_2eproto::InitDefaultsMinifyReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MinifyRequest

// bytes data_in = 1;
inline void MinifyRequest::clear_data_in() {
  data_in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MinifyRequest::data_in() const {
  // @@protoc_insertion_point(field_get:minify.MinifyRequest.data_in)
  return data_in_.GetNoArena();
}
inline void MinifyRequest::set_data_in(const ::std::string& value) {
  
  data_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:minify.MinifyRequest.data_in)
}
#if LANG_CXX11
inline void MinifyRequest::set_data_in(::std::string&& value) {
  
  data_in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:minify.MinifyRequest.data_in)
}
#endif
inline void MinifyRequest::set_data_in(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:minify.MinifyRequest.data_in)
}
inline void MinifyRequest::set_data_in(const void* value, size_t size) {
  
  data_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:minify.MinifyRequest.data_in)
}
inline ::std::string* MinifyRequest::mutable_data_in() {
  
  // @@protoc_insertion_point(field_mutable:minify.MinifyRequest.data_in)
  return data_in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MinifyRequest::release_data_in() {
  // @@protoc_insertion_point(field_release:minify.MinifyRequest.data_in)
  
  return data_in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MinifyRequest::set_allocated_data_in(::std::string* data_in) {
  if (data_in != NULL) {
    
  } else {
    
  }
  data_in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_in);
  // @@protoc_insertion_point(field_set_allocated:minify.MinifyRequest.data_in)
}

// int32 data_in_len = 2;
inline void MinifyRequest::clear_data_in_len() {
  data_in_len_ = 0;
}
inline ::google::protobuf::int32 MinifyRequest::data_in_len() const {
  // @@protoc_insertion_point(field_get:minify.MinifyRequest.data_in_len)
  return data_in_len_;
}
inline void MinifyRequest::set_data_in_len(::google::protobuf::int32 value) {
  
  data_in_len_ = value;
  // @@protoc_insertion_point(field_set:minify.MinifyRequest.data_in_len)
}

// -------------------------------------------------------------------

// MinifyReply

// bytes data_out = 1;
inline void MinifyReply::clear_data_out() {
  data_out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MinifyReply::data_out() const {
  // @@protoc_insertion_point(field_get:minify.MinifyReply.data_out)
  return data_out_.GetNoArena();
}
inline void MinifyReply::set_data_out(const ::std::string& value) {
  
  data_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:minify.MinifyReply.data_out)
}
#if LANG_CXX11
inline void MinifyReply::set_data_out(::std::string&& value) {
  
  data_out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:minify.MinifyReply.data_out)
}
#endif
inline void MinifyReply::set_data_out(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:minify.MinifyReply.data_out)
}
inline void MinifyReply::set_data_out(const void* value, size_t size) {
  
  data_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:minify.MinifyReply.data_out)
}
inline ::std::string* MinifyReply::mutable_data_out() {
  
  // @@protoc_insertion_point(field_mutable:minify.MinifyReply.data_out)
  return data_out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MinifyReply::release_data_out() {
  // @@protoc_insertion_point(field_release:minify.MinifyReply.data_out)
  
  return data_out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MinifyReply::set_allocated_data_out(::std::string* data_out) {
  if (data_out != NULL) {
    
  } else {
    
  }
  data_out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_out);
  // @@protoc_insertion_point(field_set_allocated:minify.MinifyReply.data_out)
}

// int32 data_out_len = 2;
inline void MinifyReply::clear_data_out_len() {
  data_out_len_ = 0;
}
inline ::google::protobuf::int32 MinifyReply::data_out_len() const {
  // @@protoc_insertion_point(field_get:minify.MinifyReply.data_out_len)
  return data_out_len_;
}
inline void MinifyReply::set_data_out_len(::google::protobuf::int32 value) {
  
  data_out_len_ = value;
  // @@protoc_insertion_point(field_set:minify.MinifyReply.data_out_len)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace minify

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_minify_2eproto__INCLUDED
