// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minify.proto

#include "minify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace minify {
class MinifyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MinifyRequest>
      _instance;
} _MinifyRequest_default_instance_;
class MinifyReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MinifyReply>
      _instance;
} _MinifyReply_default_instance_;
}  // namespace minify
namespace protobuf_minify_2eproto {
void InitDefaultsMinifyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::minify::_MinifyRequest_default_instance_;
    new (ptr) ::minify::MinifyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::minify::MinifyRequest::InitAsDefaultInstance();
}

void InitDefaultsMinifyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMinifyRequestImpl);
}

void InitDefaultsMinifyReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::minify::_MinifyReply_default_instance_;
    new (ptr) ::minify::MinifyReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::minify::MinifyReply::InitAsDefaultInstance();
}

void InitDefaultsMinifyReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMinifyReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyRequest, data_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyRequest, data_in_len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyReply, data_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::minify::MinifyReply, data_out_len_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::minify::MinifyRequest)},
  { 7, -1, sizeof(::minify::MinifyReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::minify::_MinifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::minify::_MinifyReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "minify.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014minify.proto\022\006minify\"5\n\rMinifyRequest\022"
      "\017\n\007data_in\030\001 \001(\014\022\023\n\013data_in_len\030\002 \001(\005\"5\n"
      "\013MinifyReply\022\020\n\010data_out\030\001 \001(\014\022\024\n\014data_o"
      "ut_len\030\002 \001(\0052B\n\010Minifier\0226\n\006Minify\022\025.min"
      "ify.MinifyRequest\032\023.minify.MinifyReply\"\000"
      "B\006\242\002\003HLWb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "minify.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_minify_2eproto
namespace minify {

// ===================================================================

void MinifyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MinifyRequest::kDataInFieldNumber;
const int MinifyRequest::kDataInLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MinifyRequest::MinifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_minify_2eproto::InitDefaultsMinifyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:minify.MinifyRequest)
}
MinifyRequest::MinifyRequest(const MinifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_in().size() > 0) {
    data_in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_in_);
  }
  data_in_len_ = from.data_in_len_;
  // @@protoc_insertion_point(copy_constructor:minify.MinifyRequest)
}

void MinifyRequest::SharedCtor() {
  data_in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_in_len_ = 0;
  _cached_size_ = 0;
}

MinifyRequest::~MinifyRequest() {
  // @@protoc_insertion_point(destructor:minify.MinifyRequest)
  SharedDtor();
}

void MinifyRequest::SharedDtor() {
  data_in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MinifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MinifyRequest::descriptor() {
  ::protobuf_minify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_minify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MinifyRequest& MinifyRequest::default_instance() {
  ::protobuf_minify_2eproto::InitDefaultsMinifyRequest();
  return *internal_default_instance();
}

MinifyRequest* MinifyRequest::New(::google::protobuf::Arena* arena) const {
  MinifyRequest* n = new MinifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MinifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minify.MinifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_in_len_ = 0;
  _internal_metadata_.Clear();
}

bool MinifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:minify.MinifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data_in = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 data_in_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_in_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:minify.MinifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:minify.MinifyRequest)
  return false;
#undef DO_
}

void MinifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:minify.MinifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_in = 1;
  if (this->data_in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_in(), output);
  }

  // int32 data_in_len = 2;
  if (this->data_in_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_in_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:minify.MinifyRequest)
}

::google::protobuf::uint8* MinifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:minify.MinifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_in = 1;
  if (this->data_in().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_in(), target);
  }

  // int32 data_in_len = 2;
  if (this->data_in_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_in_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minify.MinifyRequest)
  return target;
}

size_t MinifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minify.MinifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data_in = 1;
  if (this->data_in().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_in());
  }

  // int32 data_in_len = 2;
  if (this->data_in_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_in_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MinifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:minify.MinifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MinifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MinifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:minify.MinifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:minify.MinifyRequest)
    MergeFrom(*source);
  }
}

void MinifyRequest::MergeFrom(const MinifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minify.MinifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_in().size() > 0) {

    data_in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_in_);
  }
  if (from.data_in_len() != 0) {
    set_data_in_len(from.data_in_len());
  }
}

void MinifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:minify.MinifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MinifyRequest::CopyFrom(const MinifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minify.MinifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MinifyRequest::IsInitialized() const {
  return true;
}

void MinifyRequest::Swap(MinifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MinifyRequest::InternalSwap(MinifyRequest* other) {
  using std::swap;
  data_in_.Swap(&other->data_in_);
  swap(data_in_len_, other->data_in_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MinifyRequest::GetMetadata() const {
  protobuf_minify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_minify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MinifyReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MinifyReply::kDataOutFieldNumber;
const int MinifyReply::kDataOutLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MinifyReply::MinifyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_minify_2eproto::InitDefaultsMinifyReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:minify.MinifyReply)
}
MinifyReply::MinifyReply(const MinifyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_out().size() > 0) {
    data_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_out_);
  }
  data_out_len_ = from.data_out_len_;
  // @@protoc_insertion_point(copy_constructor:minify.MinifyReply)
}

void MinifyReply::SharedCtor() {
  data_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_out_len_ = 0;
  _cached_size_ = 0;
}

MinifyReply::~MinifyReply() {
  // @@protoc_insertion_point(destructor:minify.MinifyReply)
  SharedDtor();
}

void MinifyReply::SharedDtor() {
  data_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MinifyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MinifyReply::descriptor() {
  ::protobuf_minify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_minify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MinifyReply& MinifyReply::default_instance() {
  ::protobuf_minify_2eproto::InitDefaultsMinifyReply();
  return *internal_default_instance();
}

MinifyReply* MinifyReply::New(::google::protobuf::Arena* arena) const {
  MinifyReply* n = new MinifyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MinifyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:minify.MinifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_out_len_ = 0;
  _internal_metadata_.Clear();
}

bool MinifyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:minify.MinifyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data_out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 data_out_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_out_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:minify.MinifyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:minify.MinifyReply)
  return false;
#undef DO_
}

void MinifyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:minify.MinifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_out = 1;
  if (this->data_out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_out(), output);
  }

  // int32 data_out_len = 2;
  if (this->data_out_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_out_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:minify.MinifyReply)
}

::google::protobuf::uint8* MinifyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:minify.MinifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_out = 1;
  if (this->data_out().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_out(), target);
  }

  // int32 data_out_len = 2;
  if (this->data_out_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_out_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minify.MinifyReply)
  return target;
}

size_t MinifyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minify.MinifyReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data_out = 1;
  if (this->data_out().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_out());
  }

  // int32 data_out_len = 2;
  if (this->data_out_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_out_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MinifyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:minify.MinifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const MinifyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MinifyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:minify.MinifyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:minify.MinifyReply)
    MergeFrom(*source);
  }
}

void MinifyReply::MergeFrom(const MinifyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minify.MinifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_out().size() > 0) {

    data_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_out_);
  }
  if (from.data_out_len() != 0) {
    set_data_out_len(from.data_out_len());
  }
}

void MinifyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:minify.MinifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MinifyReply::CopyFrom(const MinifyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minify.MinifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MinifyReply::IsInitialized() const {
  return true;
}

void MinifyReply::Swap(MinifyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MinifyReply::InternalSwap(MinifyReply* other) {
  using std::swap;
  data_out_.Swap(&other->data_out_);
  swap(data_out_len_, other->data_out_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MinifyReply::GetMetadata() const {
  protobuf_minify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_minify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace minify

// @@protoc_insertion_point(global_scope)
